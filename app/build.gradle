apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {

    namespace 'com.ligo.demoapp'

    defaultConfig {
        applicationId rootProject.ext.applicationId
        compileSdk rootProject.ext.compileSdkVersion
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        buildToolsVersion = rootProject.ext.buildToolsVersion

        archivesBaseName = "LiGo $versionName"

        resConfigs "en", "ru", "be", "uk", "pl"
    }

    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def debugKeystorePropertiesFile = rootProject.file("debug.keystore.properties")

    def keystoreFile = '../ligokeystore.jks'
    def debugKeystoreFile = '../debugligokeystore.jks'

    if (!keystorePropertiesFile.exists()) {
        keystoreFile = debugKeystoreFile
        keystorePropertiesFile = debugKeystorePropertiesFile
    }

    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    def debugKeystoreProperties = new Properties()
    debugKeystoreProperties.load(new FileInputStream(debugKeystorePropertiesFile))

    signingConfigs {
        release {
            storeFile file(keystoreFile)

            storePassword keystoreProperties['store.password']
            keyAlias keystoreProperties['key.alias']
            keyPassword keystoreProperties['key.password']

        }

        debug {
            storeFile file(debugKeystoreFile)

            storePassword debugKeystoreProperties['store.password']
            keyAlias debugKeystoreProperties['key.alias']
            keyPassword debugKeystoreProperties['key.password']

        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            minifyEnabled false
            shrinkResources false

            debuggable false
            jniDebuggable false
            crunchPngs false

            proguardFiles 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug

            proguardFiles 'proguard-rules.pro'
        }
    }

    flavorDimensions += "environment"
    productFlavors {
        prod {
            dimension = "environment"
            buildConfigField 'boolean', 'SANDBOX', 'false'
        }
        sandbox {
            dimension = "environment"
            versionNameSuffix = "-SANDBOX"
            buildConfigField 'boolean', 'SANDBOX', 'true'
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.javaVersion
        targetCompatibility rootProject.ext.javaVersion
    }

    kotlinOptions {
        jvmTarget = rootProject.ext.jvmTargetVersion
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:$appCompatVersion"

    implementation "io.insert-koin:koin-android:$koinVersion"

    implementation project(":core")
    implementation project(":data")
    implementation project(':common')
    implementation project(':google')
    implementation project(":toggler")
    implementation project(":tools")
    implementation project(":tools-api")
    implementation project(":navigator")

    implementation project(":chats-coordinator")
}